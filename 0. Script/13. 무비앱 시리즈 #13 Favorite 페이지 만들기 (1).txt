13. 무비앱 시리즈 #13 Favorite 페이지 만들기 (1) ( 따라하며 배우는 리액트 노드 )

1. Favorite 페이지를 위한 Template을 간단히 만들기
2. MongoDB에서 Favorite으로 된 영화 정보들을 가져오기
3. 가져온 데이터들을 화면에서 보여주기
4. Remove 기능 만들기
---
(client/src/components/App.js)
(중략...)
<Route exact path="/favorite" component={Auth(FavoritePage, true)} />
(중략...)
---
(client/src/components/views/NavBar/Sections/LeftMenu.js)
import React from 'react';
import { Menu } from 'antd';

function LeftMenu(props) {
  return (
    <Menu mode={props.mode}>
    <Menu.Item key="mail">
      <a href="/">Home</a>
    </Menu.Item>
    <Menu.Item key="favorite">
      <a href="/favorite">Favorite</a>
    </Menu.Item>

  </Menu>
  )
}

export default LeftMenu
---
(client/src/components/views/FavoritePage/FavoritePage.js)
import React, { useEffect, useState } from 'react'
import './favorite.css'
import Axios from 'axios'
function FavoritePage() {

    const [Favorites, setFavorites] = useState([]);

    useEffect(() => {

        Axios.post('/api/favorite/getFavoredMovie', { userFrom : localStorage.getItem('userId') })
        .then(response => {
            if(response.data.success) {
                console.log(response.data)
                setFavorites(response.data.favorites)
            } else {
                alert('영화 정보를 가져오는데 실패 했습니다.')
            }
        })
    }, [])

    return (
        <div style = {{ width: '85%', margin: '3rem auto' }}>
            <h2> Favorite Movies </h2>
            <hr />

            <table>
                <thead>
                    <tr>
                        <th>Movie Title</th>
                        <th>Movie Runtime</th>
                        <th>Remove from favorites</th>
                    </tr>
                </thead>
                <tbody>
                    {Favorites.map((favorite, index) => (
                        <tr key={index}>
                            <td>{favorite.movieTitle}</td>
                            <td>{favorite.movieRunTime} mins</td>
                            <td><button>Remove</button></td>
                        </tr>
                    ))}

                </tbody>
            </table>
        </div>
    )
}

export default FavoritePage
---
(server/routes/favorite.js)
const express = require('express');
const router = express.Router();
const { Favorite } = require('../models/Favorite');

// req에는 Favorite.js 파일에서 Axios를 통하여 전달해준 아래의 값들이 담겨져 있다.
// let variables = {
//     userFrom,
//     movieId
// }
// Axios.post('/api/favorite/favoriteNumber', variables)
// body란? index.js 파일을 보면 bodyParser 를 이용하여 프론트에서 보내준 movieId를 받을 수 있다!

router.post('/favoriteNumber', (req, res) => {
    // mongoDB에서 favorite 숫자를 가져오기
    Favorite.find({ "movieId" : req.body.movieId })
    .exec(( err, info) => {
        if(err) return res.status(400).send(err)
        // 그 다음에 프론트에 다시 숫자 정보를 보내주기
        res.status(200).json ({ success : true, favoriteNumber : info.length })
    })
})

router.post('/favorited', (req, res) => { 
    // 내가 이 영화를 Favorite 리스트에 넣었는지 정보를 DB에서 가져오기.
    Favorite.find({ "movieId" : req.body.movieId, "userFrom" : req.body.userFrom })
    .exec(( err, info) => {
        if(err) return res.status(400).send(err)
        // 그 다음에 프론트에 다시 숫자 정보를 보내주기

        let result = false;
        
        // 내가 아직 페이보릿 영화를 넣었다면 true값 반환!
        if(info.length !== 0 ) {
            result = true
        }
        
        res.status(200).json ({ success : true, favorited : result})
    })
})

// 해당 무비를 Favorite 했을 경우, Favorite을 지운다!
router.post('/removeFromFavorite', (req, res) => { 
    Favorite.findOneAndDelete({ movieId : req.body.movieId, userFrom : req.body.userFrom })
    .exec(( err, doc) => {
        if(err) return res.status(400).send(err)
        return res.status(200).json({ success:true, doc })
    })
})

// 해당 무비를 Favorite 하지 않은 상태인 경우, Favorite을 한다!
router.post('/addToFavorite', (req, res) => { 
    // 도큐먼트 인스턴스 생성
    const favorite = new Favorite(req.body)

    favorite.save((err, doc) => {
        if(err) return res.status(400).send(err)
        return res.status(200).json({ success : true })
    })

})

// favorite 페이지 정보 가져오기
router.post('/getFavoredMovie', (req, res) => { 
    Favorite.find({ 'userFrom' : req.body.userFrom })
    .exec((err, favorites) => {
        if(err) return res.status(400).send(err)
        return res.status(200).json({ success : true, favorites})
    })
})
module.exports = router;
---
(clients/src/components/views/FavoritePage/favorite.css)
table {
    font-family : Arial, Helvetica, sans-serif;
    border-collapse: collapse;
    width : 100%;
}

td,th {
    border : 1px solid #dddddd;
    text-align: left;
    padding : 8px;
}

tr:nth-child(even) {
    background-color: #dddddd;
}