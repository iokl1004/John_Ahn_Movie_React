8. 무비앱 시리즈 #8 영화 출연진들 가져오기 ( 따라하며 배우는 리액트 노드 )

(client/src/components/views/MovieDetail/MovieDetail.js)
import React, { useEffect, useState } from 'react';
import { API_URL, API_KEY, IMAGE_BASE_URL } from '../../Config';
import MainImage from '../LandingPage/Sections/MainImage';
import MovieInfo from './Sections/MovieInfo';
import GridCards from '../commons/GridCards';
import { Row } from 'antd';

function MovieDetail(props) {
    let movieId = props.match.params.movieId
    const [Movie, setMovie] = useState([])
    const [Casts, setCasts] = useState([])
    const [ActorToggle, setActorToggle] = useState(false)

    useEffect(() => {
        let endpointCrew = `${API_URL}movie/${movieId}/credits?api_key=${API_KEY}`

        let endponitInfo = `${API_URL}movie/${movieId}?api_key=${API_KEY}`

        fetch(endponitInfo)
        .then(response => response.json())
        .then(response => {
            console.log(response)
            setMovie(response)
        })

        // 영화 출연자 가져오기
        fetch(endpointCrew)
        .then(response => response.json())
        .then(response => {
            console.log('responseForCrew', response)
            setCasts(response.cast)
        })
    }, [])

    const toggleActorView = () => {
        setActorToggle(!ActorToggle)
    }

    return (
        <div>
            {/* Header */}

            <MainImage
                image={`${IMAGE_BASE_URL}w1280${Movie.backdrop_path}`}
                title={Movie.original_title}
                text={Movie.overview}
            />

            {/* Body */}
            <div style={{ width: '85%', margin : '1rem auto '}}>
                {/* Movie Info */}
                <MovieInfo 
                    movie = {Movie}
                />

                <br />
                {/* Actors Grid */}

                <div style={{display : 'flex', justifyContent : 'center', margin : '2rem' }}>
                    <button onClick={toggleActorView}> Toggle Actor View </button>
                </div>

                {/* ActorToggle 인 경우에만 배우들의 사진을 보여줘라! */}
                {ActorToggle && 
                    <Row gutter={[16, 16]} >
                        {Casts && Casts.map((cast, index) => (
                            <React.Fragment key={index}>
                                <GridCards
                                    image={cast.profile_path ?
                                        // poster_path값이 없을 경우 null값 처리
                                        `${IMAGE_BASE_URL}w500${cast.profile_path}` : null}
                                    characterName={cast.name}
                                />
                            </React.Fragment>
                        ))}
                    </Row>
                }
                

            </div>
        </div>
    )
}

export default MovieDetail
---
(client/src/components/views/LandingPage.js)
import React from 'react'
import { useEffect, useState } from 'react';
import { API_URL, API_KEY, IMAGE_BASE_URL } from '../../Config';
import MainImage from './Sections/MainImage';
import GridCards from '../commons/GridCards';
import { Row } from 'antd';

function LandingPage() {

    const [Movies, setMovies] = useState([]);
    const [MainMovieImage, setMainMovieImage] = useState(null);
    const [CurrentPage, setCurrentPage] = useState(0);

    useEffect(()=> {
        const endpoint = `${API_URL}movie/popular?api_key=${API_KEY}&language=en-US&page=1`;
        fetchMovies(endpoint)
    }, [])

    // 영화정보 가져오기
    const fetchMovies = (endpoint) => {
        fetch(endpoint)
        .then(response => response.json())
        .then(response => {
            console.log(response)
            setMovies([...Movies, ...response.results]);    // 기존 Movies state에 가져온 영화정보를 추가한다!
            setMainMovieImage(response.results[0]);
            setCurrentPage(response.page)
        })
    }

    // 추가 영화정보 가져오기
    const loadMoreItems =() => {
        const endpoint = `${API_URL}movie/popular?api_key=${API_KEY}&language=en-US&page=${CurrentPage + 1}`;
        fetchMovies(endpoint)
    }
    
    return (
        <div style={{ width : '100%', margin: '0'}}>
            {/* Main Image */}
            {MainMovieImage &&
                <MainImage
                    image={`${IMAGE_BASE_URL}w1280${MainMovieImage.backdrop_path}`}
                    title={MainMovieImage.original_title}
                    text={MainMovieImage.overview}
                />
            }

            <div style= {{ width : '85%', margin : '1rem auto'}}>
                <h2>Movies by latest</h2>
                <hr />

                {/* Movie Grid Cards */}
                <Row gutter={[16, 16]} >
                    {Movies && Movies.map((movie, index) => (
                        <React.Fragment key={index}>
                            <GridCards
                                landingPage
                                image={movie.poster_path ?
                                    // poster_path값이 없을 경우 null값 처리
                                    `${IMAGE_BASE_URL}w500${movie.poster_path}` : null}
                                movieId={movie.id}
                                movieName={movie.original_title}
                            />
                        </React.Fragment>
                    ))}
                </Row>

            </div>

            {/* 추가로 영화정보 가져오기 */}
            <div style={{ display : 'flex', justifyContent : 'center' }}>
                <button onClick={loadMoreItems}> Load More </button>
            </div>

        </div>
    )
}

export default LandingPage
---
(client/src/components/views/commons/GridCards.js)
import React from 'react'
import { Col } from 'antd';
function GridCards(props) {

    // 렌딩 페이지인 경우
    if(props.landingPage) {
        return (
            // 라지 사이즈 인 경우에는 6size
            // 미디움 사이즈 인 경우에는 3개
            // 가장 작은 사이즈 인 경우에는 1개
            <Col lg={6} md={8} xs={24}>
                <div style={{ position : 'relative' }}>
                    <a href={`/movie/${props.movieId}`}>
                        <img style={{ width : '100%', height: '320px' }} src={props.image} alt={props.movieName} />
                    </a>
                </div>
            </Col>
        )
    } else {
        return (
            // 라지 사이즈 인 경우에는 6size
            // 미디움 사이즈 인 경우에는 3개
            // 가장 작은 사이즈 인 경우에는 1개
            <Col lg={6} md={8} xs={24}>
                <div style={{ position : 'relative' }}>
                    <img style={{ width : '100%', height: '320px' }} src={props.image} alt={props.characterName} />
                </div>
            </Col>
        )
    }
}

export default GridCards
